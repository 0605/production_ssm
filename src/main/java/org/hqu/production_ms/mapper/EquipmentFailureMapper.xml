<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.hqu.production_ms.mapper.EquipmentFailureMapper" >
  <resultMap id="BaseResultMap" type="org.hqu.production_ms.domain.EquipmentFailure" >
    <id column="failure_id" property="failureId" jdbcType="VARCHAR" />
    <result column="equipment_id" property="equipmentId" jdbcType="VARCHAR" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="failure_date" property="failureDate" jdbcType="TIMESTAMP" />
    <result column="repair_mode" property="repairMode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    failure_id, equipment_id, reason, failure_date, repair_mode
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.hqu.production_ms.domain.EquipmentFailureExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from equipment_failure
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from equipment_failure
    where failure_id = #{failureId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from equipment_failure
    where failure_id = #{failureId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.hqu.production_ms.domain.EquipmentFailureExample" >
    delete from equipment_failure
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.hqu.production_ms.domain.EquipmentFailure" >
    insert into equipment_failure (failure_id, equipment_id, reason, 
      failure_date, repair_mode)
    values (#{failureId,jdbcType=VARCHAR}, #{equipmentId,jdbcType=VARCHAR}, #{reason,jdbcType=VARCHAR}, 
      #{failureDate,jdbcType=TIMESTAMP}, #{repairMode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.hqu.production_ms.domain.EquipmentFailure" >
    insert into equipment_failure
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="failureId != null" >
        failure_id,
      </if>
      <if test="equipmentId != null" >
        equipment_id,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="failureDate != null" >
        failure_date,
      </if>
      <if test="repairMode != null" >
        repair_mode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="failureId != null" >
        #{failureId,jdbcType=VARCHAR},
      </if>
      <if test="equipmentId != null" >
        #{equipmentId,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="failureDate != null" >
        #{failureDate,jdbcType=TIMESTAMP},
      </if>
      <if test="repairMode != null" >
        #{repairMode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.hqu.production_ms.domain.EquipmentFailureExample" resultType="java.lang.Integer" >
    select count(*) from equipment_failure
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update equipment_failure
    <set >
      <if test="record.failureId != null" >
        failure_id = #{record.failureId,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentId != null" >
        equipment_id = #{record.equipmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.failureDate != null" >
        failure_date = #{record.failureDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.repairMode != null" >
        repair_mode = #{record.repairMode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update equipment_failure
    set failure_id = #{record.failureId,jdbcType=VARCHAR},
      equipment_id = #{record.equipmentId,jdbcType=VARCHAR},
      reason = #{record.reason,jdbcType=VARCHAR},
      failure_date = #{record.failureDate,jdbcType=TIMESTAMP},
      repair_mode = #{record.repairMode,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.hqu.production_ms.domain.EquipmentFailure" >
    update equipment_failure
    <set >
      <if test="equipmentId != null" >
        equipment_id = #{equipmentId,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="failureDate != null" >
        failure_date = #{failureDate,jdbcType=TIMESTAMP},
      </if>
      <if test="repairMode != null" >
        repair_mode = #{repairMode,jdbcType=VARCHAR},
      </if>
    </set>
    where failure_id = #{failureId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.hqu.production_ms.domain.EquipmentFailure" >
    update equipment_failure
    set equipment_id = #{equipmentId,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      failure_date = #{failureDate,jdbcType=TIMESTAMP},
      repair_mode = #{repairMode,jdbcType=VARCHAR}
    where failure_id = #{failureId,jdbcType=VARCHAR}
  </update>
</mapper>